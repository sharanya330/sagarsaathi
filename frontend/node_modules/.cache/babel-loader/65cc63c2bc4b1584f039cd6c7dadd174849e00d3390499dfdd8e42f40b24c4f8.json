{"ast":null,"code":"// Axios instance with environment-based base URL\nimport axios from 'axios';\n\n// Prefer CRA env var, fallback to common local dev port 8000\nconst BASE_URL = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Attach token from localStorage if present\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Optional: auto-logout on 401/403\napi.interceptors.response.use(res => res, err => {\n  var _err$response;\n  const status = err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status;\n  if (status === 401 || status === 403) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  return Promise.reject(err);\n});\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_BASE","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","res","err","_err$response","status","removeItem","Promise","reject"],"sources":["/Users/sharanya/Desktop/sagarsaathi/frontend/src/utils/api.js"],"sourcesContent":["// Axios instance with environment-based base URL\nimport axios from 'axios';\n\n// Prefer CRA env var, fallback to common local dev port 8000\nconst BASE_URL = process.env.REACT_APP_API_BASE || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n});\n\n// Attach token from localStorage if present\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Optional: auto-logout on 401/403\napi.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    const status = err?.response?.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAE1E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,QAAQ;EACjBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACK,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BO,GAAG,IAAKA,GAAG,EACXC,GAAG,IAAK;EAAA,IAAAC,aAAA;EACP,MAAMC,MAAM,GAAGF,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEF,QAAQ,cAAAG,aAAA,uBAAbA,aAAA,CAAeC,MAAM;EACpC,IAAIA,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;IACpCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,GAAG,CAAC;AAC5B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}